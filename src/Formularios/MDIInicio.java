/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

//El importe de las funciones usadas aquí
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.util.ArrayList;

/**
 *
 * @author LENOVO
 */
public class MDIInicio extends javax.swing.JFrame {

    //Estos son los atributos que aquí se usan, son invocados aquí para poder usarlos sin problemas y que sea más fácil la escritura.
    public static ArrayList < Cliente > ListCli = new ArrayList <> ();
    Cliente c;
    /**
     * Creates new form MDIInicio
     */
    //Esto, basicamente, lo que hace es inicializar todo esto y ejecuta inmediatamente unas pocas cosas.
    public MDIInicio() {
        initComponents();
        PNL_Transf.setVisible( false );
        this.setExtendedState ( MAXIMIZED_BOTH );
        this.setTitle ( "Manejo de Cuentas" );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Pantalla = new javax.swing.JDesktopPane();
        INP_Balance = new javax.swing.JTextField();
        INP_Cod = new javax.swing.JTextField();
        INP_Apellido = new javax.swing.JTextField();
        INP_Nombre = new javax.swing.JTextField();
        BTN_Regist = new javax.swing.JToggleButton();
        BTN_Delete = new javax.swing.JToggleButton();
        BTN_Mod = new javax.swing.JToggleButton();
        BTN_Mostrar = new javax.swing.JToggleButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        BTN_Transferir = new javax.swing.JToggleButton();
        PNL_Transf = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        INP_Cod_1 = new javax.swing.JTextField();
        INP_Cod_2 = new javax.swing.JTextField();
        INP_Monto = new javax.swing.JTextField();
        BTN_Salir_Transf = new javax.swing.JButton();
        BTN_Transf = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        OPEN_PNL_Transf = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        OPEN_Atajos = new javax.swing.JMenuItem();
        OPEN_Info = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Pantalla.add(INP_Balance);
        INP_Balance.setBounds(200, 310, 210, 30);
        Pantalla.add(INP_Cod);
        INP_Cod.setBounds(200, 260, 210, 30);
        Pantalla.add(INP_Apellido);
        INP_Apellido.setBounds(200, 210, 210, 30);
        Pantalla.add(INP_Nombre);
        INP_Nombre.setBounds(200, 160, 210, 30);

        BTN_Regist.setText("Registrar");
        BTN_Regist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_RegistActionPerformed(evt);
            }
        });
        Pantalla.add(BTN_Regist);
        BTN_Regist.setBounds(120, 390, 83, 32);

        BTN_Delete.setText("Eliminar");
        BTN_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_DeleteActionPerformed(evt);
            }
        });
        Pantalla.add(BTN_Delete);
        BTN_Delete.setBounds(260, 390, 90, 32);

        BTN_Mod.setText("Modificar");
        BTN_Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_ModActionPerformed(evt);
            }
        });
        Pantalla.add(BTN_Mod);
        BTN_Mod.setBounds(410, 390, 83, 32);

        BTN_Mostrar.setText("Mostrar");
        BTN_Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_MostrarActionPerformed(evt);
            }
        });
        Pantalla.add(BTN_Mostrar);
        BTN_Mostrar.setBounds(200, 460, 75, 32);

        jLabel3.setText("Codigo:");
        Pantalla.add(jLabel3);
        jLabel3.setBounds(130, 270, 50, 16);

        jLabel5.setText("Nombre:");
        Pantalla.add(jLabel5);
        jLabel5.setBounds(130, 170, 48, 16);

        jLabel2.setText("Apellido: ");
        Pantalla.add(jLabel2);
        jLabel2.setBounds(130, 220, 51, 16);

        jLabel4.setText("Balance:");
        Pantalla.add(jLabel4);
        jLabel4.setBounds(130, 320, 49, 16);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel1.setText("Registro");
        Pantalla.add(jLabel1);
        jLabel1.setBounds(250, 90, 120, 36);

        BTN_Transferir.setText("Transferir");
        BTN_Transferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_TransferirActionPerformed(evt);
            }
        });
        Pantalla.add(BTN_Transferir);
        BTN_Transferir.setBounds(340, 460, 90, 32);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel6.setText("Transferencia");

        jLabel7.setText("Cuenta Emisora");

        jLabel8.setText("Cuenta Receptora");

        jLabel9.setText("Codigo:");

        jLabel10.setText("Monto:");

        BTN_Salir_Transf.setText("Salir");
        BTN_Salir_Transf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_Salir_TransfActionPerformed(evt);
            }
        });

        BTN_Transf.setText("Transacción");
        BTN_Transf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_TransfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PNL_TransfLayout = new javax.swing.GroupLayout(PNL_Transf);
        PNL_Transf.setLayout(PNL_TransfLayout);
        PNL_TransfLayout.setHorizontalGroup(
            PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_TransfLayout.createSequentialGroup()
                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PNL_TransfLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PNL_TransfLayout.createSequentialGroup()
                                .addComponent(BTN_Transf, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(BTN_Salir_Transf, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PNL_TransfLayout.createSequentialGroup()
                                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(INP_Cod_1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(50, 50, 50)
                                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(INP_Cod_2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(PNL_TransfLayout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(jLabel6))
                    .addGroup(PNL_TransfLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(INP_Monto, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        PNL_TransfLayout.setVerticalGroup(
            PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PNL_TransfLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(INP_Cod_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(INP_Cod_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(INP_Monto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PNL_TransfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BTN_Transf)
                    .addComponent(BTN_Salir_Transf))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        Pantalla.add(PNL_Transf);
        PNL_Transf.setBounds(20, 530, 570, 250);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Transferencias");

        OPEN_PNL_Transf.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, java.awt.event.InputEvent.CTRL_MASK));
        OPEN_PNL_Transf.setMnemonic('o');
        OPEN_PNL_Transf.setText("Transferencia");
        OPEN_PNL_Transf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPEN_PNL_TransfActionPerformed(evt);
            }
        });
        fileMenu.add(OPEN_PNL_Transf);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("About");

        OPEN_Atajos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        OPEN_Atajos.setMnemonic('d');
        OPEN_Atajos.setText("Atajos");
        OPEN_Atajos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPEN_AtajosActionPerformed(evt);
            }
        });
        editMenu.add(OPEN_Atajos);

        OPEN_Info.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        OPEN_Info.setText("Info");
        OPEN_Info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPEN_InfoActionPerformed(evt);
            }
        });
        editMenu.add(OPEN_Info);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("Manual");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Pantalla, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Pantalla, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Esta función corresponde al botón de Mostrar, capta los datos ingresados y los imprime en un nuevo formulario que muestra todos los datos en una tabla.
    private void BTN_MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_MostrarActionPerformed
        // TODO add your handling code here:
        FrmCliente Show = new FrmCliente ();
        Pantalla.add ( Show );
        Show.setVisible( true );
        Show.toFront ();
        Show.show ();
    }//GEN-LAST:event_BTN_MostrarActionPerformed
    //Esto lo que hace es que la "pantalla" de transferencia se pueda ver.
    private void BTN_TransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_TransferirActionPerformed
        // TODO add your handling code here:
        PNL_Transf.setVisible( true );
    }//GEN-LAST:event_BTN_TransferirActionPerformed

    //Esta función corresponde al botón de Registro, capta los datos ingresados y los almacena en la clase cliente.
    private void BTN_RegistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_RegistActionPerformed
        // TODO add your handling code here:
        Cliente C = new Cliente ();
        C.setCedula ( INP_Cod.getText () );
        C.setNombre ( INP_Nombre.getText () );
        C.setApellido ( INP_Apellido.getText () );
        String _BalancText_ = INP_Balance.getText();
        int _Balance_ = Integer.parseInt ( _BalancText_ );
        C.setBalance ( _Balance_ );
        ListCli.add ( C );
        INP_Nombre.setText ("");
        INP_Apellido.setText ("");
        INP_Cod.setText ("");
        INP_Balance.setText ("");
    }//GEN-LAST:event_BTN_RegistActionPerformed

    /*Esta función corresponde al botón de Modificar, capta los datos ingresados y los almacena en la clase cliente cambiando los datos que no coinciden
    y dejando aquellos que si coinciden*/
    private void BTN_ModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_ModActionPerformed
        // TODO add your handling code here:
        String ID = INP_Cod.getText ();
        for ( int i = 0; i < ListCli.size (); i++ ){
            c = ListCli.get ( i );
            if ( ID.equals ( c.getCedula () ) ) {
                c.setNombre ( INP_Nombre.getText () );
                c.setApellido ( INP_Apellido.getText () );
                String _BalancText_ = INP_Balance.getText();
                int _Balance_ = Integer.parseInt ( _BalancText_ );
                c.setBalance ( _Balance_ );
                INP_Nombre.setText ("");
                INP_Apellido.setText ("");
                INP_Cod.setText ("");
                INP_Balance.setText ("");
            }
        }
    }//GEN-LAST:event_BTN_ModActionPerformed
    //Esta función corresponde al botón de Eliminar, capta el codigo ingresado, los compara y luego elimina la coincidencia.
    private void BTN_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_DeleteActionPerformed
        // TODO add your handling code here:
        String ID = INP_Cod.getText ();
        for ( int i = 0; i < ListCli.size (); i++ ){
            c = ListCli.get ( i );
            if ( ID.equals ( c.getCedula () ) ) {
                ListCli.remove ( i );
                INP_Cod.setText ("");
            }
        }
    }//GEN-LAST:event_BTN_DeleteActionPerformed

    private void BTN_Salir_TransfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_Salir_TransfActionPerformed
        // TODO add your handling code here:
        PNL_Transf.setVisible ( false );
    }//GEN-LAST:event_BTN_Salir_TransfActionPerformed

    /*
    Esta función lo que hace es buscar los codigos de cuenta y al encontrarlos lo que hace es sumar a la cuenta receptora el monto,
    mientras que a la cuenta emisora lo resta.
    */
    private void BTN_TransfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_TransfActionPerformed
        // TODO add your handling code here:
        int _Monto_ = Integer.parseInt ( INP_Monto.getText () );
        String ID = INP_Cod_1.getText ();
        for ( int i = 0; i < ListCli.size (); i++ ){
            c = ListCli.get ( i );
            if ( ID.equals ( c.getCedula () ) ) {
                int _Balance_ = ( c.getBalance () );
                int NeoBalan = _Balance_ - _Monto_;
                c.setBalance ( NeoBalan );
            }
        }
        String ID_2 = INP_Cod_2.getText ();
        for ( int i = 0; i < ListCli.size (); i++ ){
            c = ListCli.get ( i );
            if ( ID_2.equals ( c.getCedula () ) ) {
                int _Balance_ = ( c.getBalance () );
                int NeoBalan = _Balance_ + _Monto_;
                c.setBalance ( NeoBalan );
            }
        }
        INP_Monto.setText ("");
        INP_Cod_2.setText ("");
        INP_Cod_1.setText ("");
    }//GEN-LAST:event_BTN_TransfActionPerformed

    //Las 3 funciones siguientes están vinculadas a menu items que al accionarse muestran un formulario distinto en pantalla.
    private void OPEN_AtajosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPEN_AtajosActionPerformed
        // TODO add your handling code here:
        FrmCuenta Show = new FrmCuenta ();
        Pantalla.add ( Show );
        Show.setVisible( true );
        Show.toFront ();
        Show.show ();
    }//GEN-LAST:event_OPEN_AtajosActionPerformed

    private void OPEN_InfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPEN_InfoActionPerformed
        // TODO add your handling code here:
        FrmBanco Show = new FrmBanco ();
        Pantalla.add ( Show );
        Show.setVisible( true );
        Show.toFront ();
        Show.show ();
    }//GEN-LAST:event_OPEN_InfoActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        // TODO add your handling code here:
        FrmCuentasBancos Show = new FrmCuentasBancos ();
        Pantalla.add ( Show );
        Show.setVisible( true );
        Show.toFront ();
        Show.show ();
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    //Esto lo que hace es que la "pantalla" de transferencia se pueda ver.
    private void OPEN_PNL_TransfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPEN_PNL_TransfActionPerformed
        // TODO add your handling code here:
        PNL_Transf.setVisible ( true );
    }//GEN-LAST:event_OPEN_PNL_TransfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDIInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDIInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDIInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDIInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDIInicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton BTN_Delete;
    private javax.swing.JToggleButton BTN_Mod;
    private javax.swing.JToggleButton BTN_Mostrar;
    private javax.swing.JToggleButton BTN_Regist;
    private javax.swing.JButton BTN_Salir_Transf;
    private javax.swing.JButton BTN_Transf;
    private javax.swing.JToggleButton BTN_Transferir;
    private javax.swing.JTextField INP_Apellido;
    private javax.swing.JTextField INP_Balance;
    private javax.swing.JTextField INP_Cod;
    private javax.swing.JTextField INP_Cod_1;
    private javax.swing.JTextField INP_Cod_2;
    private javax.swing.JTextField INP_Monto;
    private javax.swing.JTextField INP_Nombre;
    private javax.swing.JMenuItem OPEN_Atajos;
    private javax.swing.JMenuItem OPEN_Info;
    private javax.swing.JMenuItem OPEN_PNL_Transf;
    private javax.swing.JPanel PNL_Transf;
    private javax.swing.JDesktopPane Pantalla;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables

}
